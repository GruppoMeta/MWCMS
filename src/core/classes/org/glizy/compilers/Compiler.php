<?php
/**
 * This file is part of the GLIZY framework.
 * Copyright (c) 2005-2012 Daniele Ugoletti <daniele.ugoletti@glizy.com>
 *
 * For the full copyright and license information, please view the COPYRIGHT.txt
 * file that was distributed with this source code.
 */


abstract class org_glizy_compilers_Compiler extends GlizyObject
{
	var $_fileName	= NULL;
	var $_cacheObj	= NULL;
	var $output 	= '';

	function __construct($cacheDir=null)
	{
		$options = array(
			'cacheDir' => $cacheDir ? $cacheDir : org_glizy_Paths::get('CACHE_CODE'),
			'lifeTime' => org_glizy_Config::get('CACHE_CODE'),
			'readControlType' => '',
			'fileExtension' => '.php'
		);

		$this->_cacheObj = &org_glizy_ObjectFactory::createObject('org.glizy.cache.CacheFile', $options);
	}

	function initOutput()
	{
		$this->output = '';
		$this->output .= '<?php'.GLZ_COMPILER_NEWLINE2;
		$this->output .= 'if (!defined(\'GLZ_LOADED\')) exit();'.GLZ_COMPILER_NEWLINE2;
		$this->output .= '// ------------------------------------------------------------------------------'.GLZ_COMPILER_NEWLINE2;
		$this->output .= '// This code is generated by GLIZY ('.get_class($this).') based on the source file'.GLZ_COMPILER_NEWLINE2;
		$this->output .= '// '.$this->_fileName.GLZ_COMPILER_NEWLINE2;
		$this->output .= '// date: '.date('m/d/Y H:i:s').GLZ_COMPILER_NEWLINE2;
		$this->output .= '// ------------------------------------------------------------------------------'.GLZ_COMPILER_NEWLINE2;
	}

	function save()
	{
		$this->_cacheObj->save( @GLZ_CHARSET != 'UTF-8' ? utf8_decode( $this->output ) : $this->output, NULL, org_glizy_Paths::get('CACHE').get_class($this));
		$fileName = $this->_cacheObj->getFileName();
		if (function_exists('opcache_invalidate')) {
			opcache_invalidate($fileName, true);
		}
		return $fileName;
	}

	abstract function compile($options);

	/**
	*	Verifica se il file è compilato, in casi affermativo restutuisce il path
	*/
	function verify($fileName, $options=NULL)
	{
		// $fileName = realpath( $fileName );
		// check if the file is already compiled in the same request
		// this is usefull in develop enviroment
		$c = org_glizy_ObjectValues::get($this->getClassName(), $fileName);
		if (!is_null($c))
		{
			return $c;
		}

		// può essere passato un nome di file per verificare
		// il caching. è utilizzato nel reamp dei pageType
		$verifyFileName = $options && isset($options['verifyFileName']) ? $options['verifyFileName'] : $fileName;
		$cacheFileName = $this->_cacheObj->verify($verifyFileName, org_glizy_Paths::get('CACHE').get_class($this));
		if ($cacheFileName===false)
		{
			$this->_fileName = $fileName;
			$cacheFileName = $this->compile( $options );
			if ($cacheFileName===false)
			{
				// TODO
				echo "FATAL ERROR ".$fileName;
				return false;
			}
		}

		org_glizy_ObjectValues::set($this->getClassName(), $fileName, $cacheFileName);
		return $cacheFileName;
	}

	function isValid( $fileName )
	{
		$fileName = realpath( $fileName );
		// check if the file is already compiled in the same request
		// this is usefull in develop enviroment
		$c = org_glizy_ObjectValues::get($this->getClassName(), $fileName);
		if (!is_null($c))
		{
			return true;
		}

		$cacheFileName = $this->_cacheObj->verify($fileName, org_glizy_Paths::get('CACHE').get_class($this));
		return $cacheFileName!==false;
	}


	public function invalidate()
	{
		$this->_cacheObj->clean(org_glizy_Paths::get('CACHE').get_class($this));
	}
}